import{_ as n,o as s,c as e,d as a}from"./app.5d78e917.js";const t={},p=a(`<h1 id="token-skipping" tabindex="-1"><a class="header-anchor" href="#token-skipping" aria-hidden="true">#</a> Token Skipping</h1><p>Chevrotain support ignoring specific Token Types. This means that these Token Types would be lexed but would not appear in the Token Vector the lexer produces. This capability is often used to ignore certain types of Tokens most commonly whitespace.</p><p>To skip a Token define its group as the special <strong>Lexer.SKIPPED</strong> For example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createToken<span class="token punctuation">,</span> Lexer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;chevrotain&quot;</span>
<span class="token keyword">const</span> WhiteSpace <span class="token operator">=</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;WhiteSpace&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">group</span><span class="token operator">:</span> Lexer<span class="token punctuation">.</span><span class="token constant">SKIPPED</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function i(r,c){return s(),e("div",null,o)}var u=n(t,[["render",i],["__file","token_skipping.html.vue"]]);export{u as default};
