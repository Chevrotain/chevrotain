import{_ as a,r as o,o as r,c as l,a as e,b as s,d as t,e as i}from"./app-e26ef647.js";const c={},p=e("h1",{id:"customizable-error-messages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#customizable-error-messages","aria-hidden":"true"},"#"),s(" Customizable Error Messages")],-1),u=e("p",null,"Chevrotain allows users to customize both the parser and lexer error messages. This can be accomplished by implementing the following interfaces:",-1),_={href:"https://chevrotain.io/documentation/11_0_0/interfaces/IParserErrorMessageProvider.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://chevrotain.io/documentation/11_0_0/interfaces/ILexerErrorMessageProvider.html",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"See executable examples:",-1),m={href:"https://github.com/chevrotain/chevrotain/blob/master/examples/parser/custom_errors/custom_errors.js",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/chevrotain/chevrotain/blob/master/examples/lexer/custom_errors/custom_errors.js",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>In addition it is also possible to directly provide strings values to be used in errors for specific parsing DSL methods, for example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">(</span><span class="token string">&quot;myStatement&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>SemiColon<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token constant">ERR_MSG</span><span class="token operator">:</span> <span class="token string">&quot;expecting semiColon at end of myStatement&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <strong>ERR_MSG</strong> config property is available for the following DSL methods:</p>`,3),f={href:"https://chevrotain.io/documentation/11_0_0/classes/CstParser.html#CONSUME",target:"_blank",rel:"noopener noreferrer"},b={href:"https://chevrotain.io/documentation/11_0_0/classes/CstParser.html#OR",target:"_blank",rel:"noopener noreferrer"},g={href:"https://chevrotain.io/documentation/11_0_0/classes/CstParser.html#AT_LEAST_ONE",target:"_blank",rel:"noopener noreferrer"},E={href:"https://chevrotain.io/documentation/11_0_0/classes/CstParser.html#AT_LEAST_ONE_SEP",target:"_blank",rel:"noopener noreferrer"};function x(S,C){const n=o("ExternalLinkIcon");return r(),l("div",null,[p,u,e("ul",null,[e("li",null,[e("a",_,[s("IParserErrorMessageProvider"),t(n)])]),e("li",null,[e("a",d,[s("ILexerErrorMessageProvider"),t(n)])])]),h,e("ul",null,[e("li",null,[e("a",m,[s("Custom Parser Errors"),t(n)]),s(".")]),e("li",null,[e("a",v,[s("Custom Lexer Errors"),t(n)]),s(".")])]),k,e("ul",null,[e("li",null,[e("a",f,[s("CONSUME"),t(n)])]),e("li",null,[e("a",b,[s("OR"),t(n)])]),e("li",null,[e("a",g,[s("AT_LEAST_ONE"),t(n)])]),e("li",null,[e("a",E,[s("AT_LEAST_ONE_SEP"),t(n)])])])])}const L=a(c,[["render",x],["__file","custom_errors.html.vue"]]);export{L as default};
