(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{173:function(t,a,e){"use strict";e.r(a);var n=e(0),s=Object(n.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("Chevrotain can be used as the underlying engine for other parsing libraries.")]),t._v(" "),e("p",[t._v("The general flow is:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("Skip to "),e("a",{attrs:{href:"https://github.com/SAP/chevrotain/tree/master/examples/custom_apis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("runnable examples"),e("OutboundLink")],1)]),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("The structure of the GAST is made up of the following classes:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/rule.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rule"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/terminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terminal"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/nonterminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("NonTerminal"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/alternation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Alternation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/option.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Option"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/repetition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Repetition"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/repetitionwithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionWithSeparator"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/repetitionmandatory.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatory"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/repetitionmandatorywithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatoryWithSeparator"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/classes/flat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flat"),e("OutboundLink")],1),t._v(" (sequence)")])]),t._v(" "),e("p",[t._v("For example to define a grammar rule for a fully qualified name:")]),t._v(" "),t._m(4),e("p",[t._v("Is equivalent to:")]),t._v(" "),t._m(5),e("p",[t._v("Important to note that:")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("Chevrotain exposes three functions for Grammar(GAST) Validation purposes:")]),t._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#resolvegrammar",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("resolveGrammar")]),e("OutboundLink")],1),t._v("\nNonTerminals are often referenced by their name as cyclic references will make\na direct object reference impossible, for example with right recursion:")]),t._v(" "),t._m(8),e("p",[t._v('The resolveGrammar function will resolve (mutate the input rules) such "name only" references\nto the actual Rule instance.')]),t._v(" "),e("p",[t._v("For any reference that cannot be resolved an error object will be outputted,\nthis object will contain an error message which can be customized by providing\na custom implementation of "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/interfaces/igrammarresolvererrormessageprovider.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IGrammarResolverErrorMessageProvider"),e("OutboundLink")],1),t._v(".\nThe "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#defaultgrammarresolvererrorprovider",target:"_blank",rel:"noopener noreferrer"}},[t._v("default implementation"),e("OutboundLink")],1),t._v(" also exported as part of the public API.")])])]),t._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#validategrammar",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("validateGrammar")]),e("OutboundLink")],1),t._v("\nChevrotain expose a set of checks on the grammar structure that it is "),e("strong",[t._v("highly recommended")]),t._v(" to execute.\nThese checks will detect ambiguous alternatives, left recursion, conflicting Terminals & NonTerminal names and more...")]),t._v(" "),e("p",[t._v("validateGrammar is side effect free and like resolveGrammar will return an array of error objects.\nThe error messages in these objects can once again be customized by providing a "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/interfaces/igrammarvalidatorerrormessageprovider.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IGrammarResolverErrorMessageProvider"),e("OutboundLink")],1),t._v("\noptionally based on the "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#defaultgrammarvalidatorerrorprovider",target:"_blank",rel:"noopener noreferrer"}},[t._v("default implementation"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#assignoccurrenceindices",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("assignOccurrenceIndices")]),e("OutboundLink")],1),t._v('\nChevrotain has certain constraint on the "shape" of the generated code. The relevant one in this case is the '),e("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES",target:"_blank",rel:"noopener noreferrer"}},[t._v("unique numerical suffixes"),e("OutboundLink")],1),t._v(" for the DSL methods.\nThe assignOccurrenceIndices function will take care of this requirement by mutating the idx property on the GAST classes accordingly.")])])]),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("As mentioned earlier "),e("strong",[t._v("validateGrammar")]),t._v(" "),e("strong",[t._v("assignOccurrenceIndices")]),t._v(" optionally accept\na "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#validategrammar",target:"_blank",rel:"noopener noreferrer"}},[t._v("errMsgProvider"),e("OutboundLink")],1),t._v(" option.\nNote that all custom error message builders receive a GAST instance as input. What this means is that\nthe GAST classes created by the implementor of the custom API can be augmented with additional information to enable\nproducing better error messages. e.g:")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),e("p",[t._v("There are two APIs for code generation and execution.")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#generateparsermodule",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("generateParserModule")]),e("OutboundLink")],1),t._v("\nThis will generate the string literal of a "),e("a",{attrs:{href:"https://github.com/umdjs/umd",target:"_blank",rel:"noopener noreferrer"}},[t._v("UMD"),e("OutboundLink")],1),t._v(" module.\nThis UMD pattern is consumable in all standard JS runtimes & module implementations.\nThe approach is to generate the string literal and write it to a file for later consumption.\nHowever for development purposes or under certain runtimes it is possible to skip the file creation\nFor example see the "),e("a",{attrs:{href:"https://github.com/floatdrop/require-from-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("require-from-string"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/4_1_1/globals.html#generateparserfactory",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("generateParserFactory")]),e("OutboundLink")],1),t._v("\nThis API skips string literal and directly evals (new Function(...)) the code and returns\na factory that can be used to create Parser instances.")]),t._v(" "),e("p",[t._v("This can be useful for development and testing purposes but be wary\nas certain execution environments disallow the use of eval/new Function.\nSpecifically webpages with content security policy enabled and browser extensions.\nHowever if the custom API is targeting only a node.js runtime this can be very\nuseful for example for a combinator style API in which code generation is best\navoided.")])])]),t._v(" "),t._m(12),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/SAP/chevrotain/tree/master/examples/custom_apis/combinator",target:"_blank",rel:"noopener noreferrer"}},[t._v("Combinator Style"),e("OutboundLink")],1)])]),t._v(" "),t._m(13)]),t._v(" "),t._m(14),t._v(" "),e("p",[t._v("The Following features are currently unsupported.")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Embedded actions")]),t._v(", which means the only way to get output from the parser is by enabling automatic "),e("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/guide/concrete_syntax_tree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Concrete Syntax Tree"),e("OutboundLink")],1),t._v(" creation.")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/SAP/chevrotain/blob/master/examples/parser/predicate_lookahead/predicate_lookahead.js",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Gates/Predicates")]),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/SAP/chevrotain/blob/master/examples/parser/parametrized_rules/parametrized.js",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Parameterized Rules")]),e("OutboundLink")],1),t._v(".")])])])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"creating-custom-parsing-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-custom-parsing-apis","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating Custom Parsing APIs")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ol",[a("li",[this._v("Creating a GAST (Grammar AST) data structure.")]),this._v(" "),a("li",[this._v("Resolving and validating the GAST Structure.")]),this._v(" "),a("li",[this._v("Generating the parser code and executing.\n"),a("ul",[a("li",[this._v('Can be done "in memory" without writing to file in certain runtime envs.')])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"tldr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tldr","aria-hidden":"true"}},[this._v("#")]),this._v(" TLDR")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"gast-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gast-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" GAST Structure")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("fqn : Ident (Dot Ident)\n")])])])},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createToken"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Rule"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Terminal"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Repetition "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("require")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"chevrotain"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Ident "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("createToken")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Ident"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token regex"}},[t._v("/[a-zA-Z]\\w+/")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Dot "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("createToken")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"Dot"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token regex"}},[t._v("/\\./")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fqn "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Rule")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"fqn"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Terminal")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" terminalType"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ident "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Repetition")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Terminal")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" terminalType"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dot "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Terminal")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" terminalType"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ident "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ul",[e("li",[e("p",[t._v("By default the definition array for each GAST class acts as a sequence,\nHowever in the case of Alternation each element in the definition array represents a different\nalternative which should be wrapped in a Flat class.")]),t._v(" "),e("p",[t._v("e.g:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Flat"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Alternation "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("require")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token string"}},[t._v('"chevrotain"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gastAlts "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Alternation")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{attrs:{class:"token comment"}},[t._v("// first alternative")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Flat")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v("\n            "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token comment"}},[t._v("// second alternative")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Flat")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v("\n            "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token comment"}},[t._v("// third alternative")]),t._v("\n        "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Flat")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            definition"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v("\n            "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"grammar-validations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grammar-validations","aria-hidden":"true"}},[this._v("#")]),this._v(" Grammar Validations")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("   rule1: A (rule1)?\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"a-note-on-custom-error-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-note-on-custom-error-messages","aria-hidden":"true"}},[this._v("#")]),this._v(" A Note on Custom Error Messages")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[a("p",[this._v("A Parser Generator style API using an EBNF notation in a "),a("strong",[this._v("separate file")]),this._v(".\nmay add location (line/column/offset) information to be able to link to locations in the original EBNF styled file.")])]),this._v(" "),a("li",[a("p",[this._v("A Parser combinator API may attempt to reconstruct the original text of its API invocations to give better hints\nto assist in locating the original error.")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"code-generation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-generation","aria-hidden":"true"}},[this._v("#")]),this._v(" Code Generation")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"runnable-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runnable-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Runnable Examples")])},function(){var t=this.$createElement,a=this._self._c||t;return a("li",[a("p",[this._v("Generator Style (TBD)")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"limitations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitations","aria-hidden":"true"}},[this._v("#")]),this._v(" Limitations")])}],!1,null,null,null);s.options.__file="custom_apis.md";a.default=s.exports}}]);