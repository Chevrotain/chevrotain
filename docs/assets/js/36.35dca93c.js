(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{208:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("Imagine the following grammar:")]),t._v(" "),t._m(3),s("p",[t._v('The first alternative is a prefix of the second alternative.\nNow lets consider the input ["A", "B"].\nFor this input the first alternative would be matched as expected.')]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("There are two ways to resolve this:")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("An Ambiguous Alternatives Error occurs when Chevrotain cannot decide between two alternatives in\nan alternation (OR DSL method).")]),t._v(" "),s("p",[t._v('Chevrotain "looks ahead" at most '),s("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/6_2_0/interfaces/iparserconfig.html#maxlookahead",target:"_blank",rel:"noopener noreferrer"}},[t._v("K (4 by default)"),s("OutboundLink")],1),t._v("\ntokens to determine which alternative to pick. An Ambiguous Alternatives Error indicates\nthat more than K tokens lookahead is needed.")]),t._v(" "),s("p",[t._v("Lets consider a more concrete example:")]),t._v(" "),t._m(7),s("p",[t._v('In order to decide between these two alternatives, Chevrotain must "look ahead" '),s("strong",[t._v("five")]),t._v(' tokens as the\ndisambiguating tokens are "1" and "2".\nFive is a larger than the default '),s("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/6_2_0/interfaces/iparserconfig.html#maxlookahead",target:"_blank",rel:"noopener noreferrer"}},[t._v("maxLookahead"),s("OutboundLink")],1),t._v(" of four, so an error will be raised.")]),t._v(" "),s("p",[t._v("We could solve this case by increasing the "),s("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/6_2_0/interfaces/iparserconfig.html#maxlookahead",target:"_blank",rel:"noopener noreferrer"}},[t._v("maxLookahead"),s("OutboundLink")],1),t._v(" to 5, however this is "),s("strong",[t._v("not")]),t._v(" recommended\ndue to performance and grammar complexity reasons.\nFrom a performance perspective this is particularly problematic as some analysis\ndone on the grammar (during initialization) may become "),s("strong",[t._v("exponentially")]),t._v(" more complex as the maxLookahead grows.")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),s("p",[t._v("In some rare cases refactoring the grammar is not possible, in those cases it is still possible to resolve the\nambiguity using the "),s("router-link",{attrs:{to:"./../features/backtracking.html"}},[t._v("backtracking feature")]),t._v("\nAlthough this is "),s("strong",[t._v("strongly")]),t._v(" discouraged due to performance and complexity reasons...")],1),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("Keeping this property in mind lets look at a few common causes of such an error\nThis parser")]),t._v(" "),s("ul",[t._m(16),t._v(" "),t._m(17),t._v(" "),s("li",[s("p",[t._v("This error may also occur due to source code transformations of the parser.\nSee: "),s("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/FAQ.html#MINIFIED",target:"_blank",rel:"noopener noreferrer"}},[t._v("Minification"),s("OutboundLink")],1),t._v("\nand "),s("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/FAQ.html#WEBPACK",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack"),s("OutboundLink")],1),t._v(" FAQ sections.")]),t._v(" "),s("p",[t._v("Basically if a code snippet such as:")]),t._v(" "),t._m(18),s("p",[t._v("gets transformed to something like")]),t._v(" "),t._m(19),s("p",[t._v("Then the literal form no longer matches the name property...")])])]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),s("p",[t._v("Lets look at a few real examples that can cause this error")]),t._v(" "),t._m(24),s("p",[t._v("By returning early in the iteration grammar we prevent the parser from consuming\nThe plus token and thus the next time the parser checks if it should enter the iteration\nThe condition (nextToken === Plus) would still be true.")]),t._v(" "),t._m(25),s("p",[t._v("This is similar to the previous example as if the condition is false, once\nagain the parser will consume nothing in the iteration.\nModeling conditional grammar paths must be done using Chevrotain grammar constructs\nsuch as OPTION and/or "),s("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/features/gates.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GATE"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("For example the above example should be written as:")]),t._v(" "),t._m(26)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"resolving-grammar-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolving-grammar-errors","aria-hidden":"true"}},[this._v("#")]),this._v(" Resolving Grammar Errors")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[a("a",{attrs:{href:"#COMMON_PREFIX"}},[this._v("Common Prefix Ambiguities.")])]),this._v(" "),a("li",[a("a",{attrs:{href:"#AMBIGUOUS_ALTERNATIVES"}},[this._v("Ambiguous Alternatives Detected.")])]),this._v(" "),a("li",[a("a",{attrs:{href:"#TERMINAL_NAME_NOT_FOUND"}},[this._v("Terminal Token Name Not Found.")])]),this._v(" "),a("li",[a("a",{attrs:{href:"#INFINITE_LOOP"}},[this._v("Infinite Loop Detected.")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"COMMON_PREFIX"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#COMMON_PREFIX","aria-hidden":"true"}},[this._v("#")]),this._v(" Common Prefix Ambiguities")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('myRule:\n  "A" "B" |\n  "A" "B" "C"\n')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v('However for the input ["A", "B", "C"] the first\nalternative would still be matched but this time '),a("strong",[this._v("incorrectly")]),this._v("\nas alternation matches are attempted "),a("strong",[this._v("in order")]),this._v(".")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[a("p",[this._v("Reorder the alternatives so that shorter common prefix lookahead\npaths appears after the longer ones.")]),this._v(" "),a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('myRule:\n  "A" "B" "C" |\n  "A" "B"\n')])])])]),this._v(" "),a("li",[a("p",[this._v("Refactor the grammar to extract common prefixes.")]),this._v(" "),a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('  myRule:\n    "A" "B" ("C")?\n')])])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"AMBIGUOUS_ALTERNATIVES"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#AMBIGUOUS_ALTERNATIVES","aria-hidden":"true"}},[this._v("#")]),this._v(" Ambiguous Alternatives Detected")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('fiveTokensLookahead:\n  "A" "B" "C" "D" "1" |\n  "A" "B" "C" "D" "2"\n')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("strong",[a("em",[this._v("The recommended solution in this case would be to refactor the grammar to require a smaller lookahead")])]),this._v(".\nIn our trivial example the grammar can be refactored to be LL(1), meaning only one token of lookahead is needed.\nThe needed change is a simple "),a("strong",[this._v("extraction of the common prefix before the alternation")]),this._v(".")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('oneTokenLookahead:\n  "A" "B" "C" "D"\n  (\n    "1" |\n    "2"\n  )\n')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("Note that the number of lookahead tokens needed to choose between alternatives may in fact be "),a("strong",[this._v("infinite")]),this._v(", for example:")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('infiniteTokensLookahead:\n  ("A")* "1"  |\n  ("A")* "2"\n')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v('No matter how large a maxLookahead we choose, the sequence of "A"s could always (potentially) be longer...\nThe solution in this case is the same as before, '),a("strong",[this._v("extraction of the common prefix before the alternation")]),this._v(", for example:")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language-antlr extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('oneTokenLookahead:\n  ("A")*\n  (\n    "1" |\n    "2"\n  )\n')])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"TERMINAL_NAME_NOT_FOUND"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#TERMINAL_NAME_NOT_FOUND","aria-hidden":"true"}},[this._v("#")]),this._v(" Terminal Token Name Not Found")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("This error occurs when Chevrotain cannot find a TokenType used in a CONSUME call.\nNote that Chevrotain identifies the TokenType "),a("strong",[this._v("literally")]),this._v(" that is to say\nChevrotain "),a("strong",[this._v("reads")]),this._v(" the parser's source code (static analysis) not the value at runtime.")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("li",[s("p",[t._v("The TokenType's name does not match its literal form.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CstParser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chevrotain"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// note the name property "copyPastaMistake" is different that the variable name "Integer"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Integer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"copyPastaMistake"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" allTokens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyParser")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CstParser")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RULE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyRule"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Will cause "Terminal Token Name Not Found"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("li",[s("p",[t._v("The TokenType's was not provided to the parser in the tokenDictionary argument.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CstParser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chevrotain"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Integer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Opps we forgot to add the Integer Token to the TokenDictionary")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" allTokens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyParser")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CstParser")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RULE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyRule"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Will cause "Terminal Token Name Not Found"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Integer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v14 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v14"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"INFINITE_LOOP"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#INFINITE_LOOP","aria-hidden":"true"}},[this._v("#")]),this._v(" Infinite Loop Detected")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("Note "),a("strong",[this._v("This error is only relevant in versions prior to 4.4.0")]),this._v("\nSee: https://github.com/SAP/chevrotain/issues/958")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("A repetition must consume at least one token in each iteration.\nEntering an iteration while failing to do so would cause an "),a("strong",[this._v("infinite loop")]),this._v(" because\nthe condition to entering the next iteration would still be true while the parser state has\nnot been changed. essentially this creates a flow that looks like:")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// iteration lookahead condition (always true)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// single iteration grammar")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unreachable code")]),t._v("\n    $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Plus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Never wrap Chevrotain grammar in JavaScript control flow constructs.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Plus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OPTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSUME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Plus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);a.default=n.exports}}]);