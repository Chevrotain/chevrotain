(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{197:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("ul",[t._m(1),t._v(" "),a("li",[a("p",[t._v("Automatic "),a("a",{attrs:{href:"https://sap.github.io/chevrotain/docs/guide/concrete_syntax_tree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Concrete Syntax Tree"),a("OutboundLink")],1),t._v(" output is now enabled by default.\nThis means that parser which rely on "),a("strong",[t._v("embedded actions")]),t._v(" must "),a("strong",[t._v("explicitly")]),t._v(" disable\nthe CST output, for example:")]),t._v(" "),t._m(2),t._m(3)]),t._v(" "),t._m(4)]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("ul",[a("li",[a("p",[t._v("The creation of TokenTypes using the class keyword syntax has been soft deprecated.\nand is no longer officially supported.\ne.g:")]),t._v(" "),t._m(8),a("p",[t._v("See the reasoning in "),a("a",{attrs:{href:"https://github.com/SAP/chevrotain/issues/653",target:"_blank",rel:"noopener noreferrer"}},[t._v("this issue"),a("OutboundLink")],1),t._v(".")])])]),t._v(" "),a("ul",[t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("li",[a("p",[t._v("The constructors of all the gast (Grammar AST) structure have been\nrefactored to use the config object pattern additionally some properties have been renamed or removed.\nSee the new SDK docs for details:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/rule.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rule"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/terminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terminal"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/nonterminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("NonTerminal"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/alternation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Alternation"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/option.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Option"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/repetition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Repetition"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/repetitionwithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionWithSeparator"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/repetitionmandatory.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatory"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/repetitionmandatorywithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatoryWithSeparator"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sap.github.io/chevrotain/documentation/2_0_0/classes/flat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flat"),a("OutboundLink")],1),t._v(" (sequence)")])])])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4-0-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-0-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 4.0.0")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[t._v('The Parser constructor no longer accepts a token vector as an argument.\nThe "input" '),a("strong",[t._v("setter")]),t._v(" should be used instead, for example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Old API")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyOldParser")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("constructor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allTokens"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldInstance "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyOldParser")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("/* token vector */")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// New API")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyNewParser")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("constructor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newInstance "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyNewParser")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnewInstance"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/* token vector */")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Note that the input "),a("strong",[t._v("setter")]),t._v(" has existed for a while and has been used\nin the official examples and documentation, therefore it is likely that\nonly the constructor need be modified in existing parsers.")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyNewParser")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("constructor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// we have to explicitly disable the CST building for embedded actions to work.")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" outputCst"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("If a parser already uses CST output no change is needed in 4.0")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[t._v("DSL repetitions no longer return any values in "),a("strong",[t._v("embedded actions")]),t._v(" mode:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("MANY")]),t._v(" / "),a("strong",[t._v("AT_LEAST_ONE")]),t._v(" no longer return an array of the iteration results.\nThe iterations results should be collected manually instead:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Before 4.0.0")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stmts "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("MANY")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Statement"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// After 4.0.0")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stmts "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("MANY")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stmts"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("push")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Statement"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Similarly "),a("strong",[t._v("MANY_SEP")]),t._v(" / "),a("strong",[t._v("AT_LEAST_ONE_SEP")]),t._v(" also no longer return any results.\nThese used to return both the repetition result array and an array of separators Tokens consumed.\nIt is still possible to manually collect the repetition results, but not the separator tokens.")])]),t._v(" "),a("li",[a("p",[t._v("This change has no effect when using automatic "),a("strong",[t._v("CST creation")]),t._v(".")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-0-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.0.0")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[t._v("A CST Node's children dictionary no longer contains empty arrays\nfor unmatched terminals and non-terminals. This means that some existence checks\nconditions in the CST visitor must be refactored, for example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MyVisitor")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SomeBaseVisitor")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("atomicExpression")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// BAD - will fail due to \"TypeError: Cannot read property '0' of undefined\"")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// GOOD - safe check")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token comment"}},[t._v("// if a property exists it's value is guaranteed to have at least one element.")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ctx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-0-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-0-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.0.0")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// No longer officially supported")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Identifier")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" pattern "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[a-zA-Z_]\\w+/")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Use the createToken API instead")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Identifier "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("createToken")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Identifier"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pattern"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[a-zA-Z_]\\w+/")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("defaultErrorProvider was renamed to defaultParserErrorProvider")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[a("strong",[t._v("All")]),t._v(" the gast namespace was flattened into the API's root, e.g:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Old API - using nested namespace.")]),t._v("\nchevrotain"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gast"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Alternation\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// New API - No nested namespaces.")]),t._v("\nchevrotain"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Alternation\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("The exceptions namespace was also flattened into the API's root.")])])}],!1,null,null,null);e.options.__file="BREAKING_CHANGES.md";s.default=e.exports}}]);