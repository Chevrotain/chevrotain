(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{414:function(t,s,a){"use strict";a.r(s);var e=a(43),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_10-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-0-0"}},[t._v("#")]),t._v(" 10.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Dropped support for legacy ES5.1 runtimes (e.g: IE11)\nThe minimum ECMAScript version needed to run Chevrotain is now ES2015 (ES6).\nThis should not affect anyone running on a modern engine,"),a("br"),t._v("\nmeaning modern NodeJS versions or popular evergreen browsers.")])]),t._v(" "),a("li",[a("p",[t._v("Various TypeScript signatures are now more accurate and strict which could potentially\ncause compilation errors with some grammars implemented in TypeScript, e.g:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("OPTION")]),t._v(" methods now return "),a("code",[t._v("OUT | undefined")]),t._v(" instead of just "),a("code",[t._v("OUT")]),t._v(".")]),t._v(" "),a("li",[t._v("A "),a("code",[t._v("RULE")]),t._v(" implementation function in "),a("code",[t._v("CstParser")]),t._v(" is now defined as returning "),a("code",[t._v("void")]),t._v(".")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("ARGS")]),t._v(" for "),a("code",[t._v("SubruleMethodOpts")]),t._v(" options type is now better enforced via generics in the "),a("code",[t._v("subrule")]),t._v(" definition.")])])])]),t._v(" "),a("h2",{attrs:{id:"_9-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-0-0"}},[t._v("#")]),t._v(" 9.0.0")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Custom APIs")]),t._v(" feature has been deprecated and removed.\nThis means the following public APIs no longer exist:\n"),a("ul",[a("li",[a("code",[t._v("resolveGrammar")])]),t._v(" "),a("li",[a("code",[t._v("validateGrammar")])]),t._v(" "),a("li",[a("code",[t._v("assignOccurrenceIndices")])]),t._v(" "),a("li",[a("code",[t._v("defaultGrammarValidatorErrorProvider")])]),t._v(" "),a("li",[a("code",[t._v("defaultGrammarResolverErrorProvider")])]),t._v(" "),a("li",[a("code",[t._v("IGrammarValidatorErrorMessageProvider")])]),t._v(" "),a("li",[a("code",[t._v("IGrammarResolverErrorMessageProvider")])]),t._v(" "),a("li",[a("code",[t._v("IParserDefinitionError")])]),t._v(" "),a("li",[a("code",[t._v("generateParserFactory")])]),t._v(" "),a("li",[a("code",[t._v("generateParserModule")])])])])]),t._v(" "),a("h2",{attrs:{id:"_8-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-0"}},[t._v("#")]),t._v(" 8.0.0")]),t._v(" "),a("ul",[a("li",[t._v("Chevrotain now uses the package.json "),a("code",[t._v("exports")]),t._v(" field, as specified in the "),a("a",{attrs:{href:"https://nodejs.org/api/packages.html#packages_package_entry_points",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),a("OutboundLink")],1),t._v(":\n"),a("blockquote",[a("p",[t._v("Warning: Introducing the \"exports\" field prevents consumers of a package from using any entry points that are not defined, including the package.json (e.g. require('your-package/package.json'). This will likely be a breaking change.")])])])]),t._v(" "),a("h2",{attrs:{id:"_7-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-0"}},[t._v("#")]),t._v(" 7.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("The Parser's default "),a("code",[t._v("maxLookahead")]),t._v(" was reduced to 3. This could cause ambiguity issues in existing\nParsers. The pre 7.0.0 behavior can be reproduced by passing an explicit "),a("code",[t._v("maxLookahead")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MoreLookaheadParser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CstParser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      maxLookahead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("It is also possible (and recommended) to increase the maxLookahead for a specific DSL method rather than globally for all.\nSee "),a("a",{attrs:{href:"https://github.com/chevrotain/chevrotain/issues/1012",target:"_blank",rel:"noopener noreferrer"}},[t._v("relevant issue"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("The soft deprecated "),a("code",[t._v("Parser")]),t._v(" class has been fully removed, use "),a("code",[t._v("CstParser")]),t._v(" or "),a("code",[t._v("EmbeddedActionsParser")]),t._v(" instead.\nThe choice depends on if your parser outputs a "),a("a",{attrs:{href:"https://chevrotain.io/docs/guide/concrete_syntax_tree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CST"),a("OutboundLink")],1),t._v(" or not.\nthe "),a("code",[t._v("outputCst")]),t._v(" property of the IParserConfig was also removed as this behavior is now controlled by base Parser class which is\nextended.")])]),t._v(" "),a("li",[a("p",[t._v("The soft deprecated "),a("strong",[t._v("static")]),t._v(" "),a("code",[t._v("performSelfAnalysis")]),t._v(" method has been fully removed, use the "),a("strong",[t._v("instance")]),t._v(" method with the same name instead.")])]),t._v(" "),a("li",[a("p",[t._v("The IParserConfig's "),a("code",[t._v("ignoredIssues")]),t._v(" property has been deprecated.\nAny Parser still using this property will throw an exception on initialization.\nIf any ambiguities need be ignored, the "),a("code",[t._v("IGNORE_AMBIGUITIES")]),t._v(" property should be used instead on specific DSL rules.")]),t._v(" "),a("ul",[a("li",[t._v("see: "),a("a",{attrs:{href:"https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ignoring Ambiguities Docs"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[t._v("Nested / In-Lined rules via the "),a("code",[t._v("NAME")]),t._v(" parameter for DSL rules have been deprecated, e.g:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RULE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statements"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$letStatement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ALT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$selectStatement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ALT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v('This feature was not orthogonal with other features (e.g error recovery) and added quite a-lot of complexity for the\nsmall benefit of a little syntactic sugar. Instead of using "nested / in-lined" rules, simply extract the content\nof these rules to "regular" top level rules.')])]),t._v(" "),a("li",[a("p",[t._v("Reducing the usage of 'any' in the 'OR' method type signature may cause existing code to fail TypeScript compilation.\nIn such a case an explicit usage of a generic "),a("code",[t._v("any")]),t._v(" type will resolve the problem.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("All methods of the Interface "),a("code",[t._v("errorMessageProvider")]),t._v(" are now "),a("strong",[t._v("mandatory")]),t._v(".\nTo defer to the default error message template behavior, defer to "),a("code",[t._v("chevrotain.defaultParserErrorProvider")]),t._v(", e.g:")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  defaultParserErrorProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  IParserErrorMessageProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  IToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  TokenType\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chevrotain"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("myCustomErrorMsgProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IParserErrorMessageProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildNoViableAltMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    expectedPathsPerAlt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TokenType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    actual"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    previous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IToken\n    customUserDescription"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    ruleName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Custom user error message builder")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sad sad panda:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildEarlyExitMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    expectedIterationPaths"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TokenType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    actual"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    previous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IToken\n    customUserDescription"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    ruleName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// invoking the default error message string builder.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" defaultParserErrorProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildEarlyExitMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Implementation of other properties from `IParserErrorMessageProvider`")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("The TokenType's "),a("code",[t._v("tokenName")]),t._v(" property has been deprecated (This actually happened in 6.3.1...) use the "),a("code",[t._v("name")]),t._v(" property instead.")])]),t._v(" "),a("li",[a("p",[t._v("The GAST "),a("code",[t._v("Flat")]),t._v(" class was renamed to "),a("code",[t._v("Alternative")]),t._v(".")])])]),t._v(" "),a("h2",{attrs:{id:"_6-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-0-0"}},[t._v("#")]),t._v(" 6.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Due to re-implementation of the grammar analysis via "),a("RouterLink",{attrs:{to:"/guide/internals.html#grammar-recording"}},[t._v('"grammar recording"')]),t._v(", certain semantics action\nwill now need to be wrapped in the new "),a("a",{attrs:{href:"https://chevrotain.io/documentation/6_0_0/classes/baseparser.html#action",target:"_blank",rel:"noopener noreferrer"}},[t._v("ACTION"),a("OutboundLink")],1),t._v(" Parsing\nDSL method. This will not affect Parsers that output a CST and only affect some of the Parsers which employ embedded semantic actions.\nThe Missing "),a("code",[t._v("ACTION")]),t._v(" wrappers will be automatically detected and throw a descriptive error message to ease migration.")],1)]),t._v(" "),a("li",[a("p",[t._v("Grammar de-serialization support has been removed as it is now redundant as Chevrotain no longer relies on "),a("code",[t._v("Function.prototype.toString")]),t._v(".\nAnd the de-serialization feature was a workaround to issues caused by "),a("code",[t._v("Function.prototype.toString")]),t._v(".\nThis means the "),a("a",{attrs:{href:"https://chevrotain.io/documentation/5_0_0/interfaces/iparserconfig.html#serializedgrammar",target:"_blank",rel:"noopener noreferrer"}},[t._v("serializedGrammar property"),a("OutboundLink")],1),t._v("\nof the Parser's configuration was removed, and using it will cause an error to be thrown during initialization.")])]),t._v(" "),a("li",[a("p",[t._v("The Parser's "),a("a",{attrs:{href:"https://chevrotain.io/documentation/6_0_0/classes/baseparser.html#getgastproductions",target:"_blank",rel:"noopener noreferrer"}},[t._v("getGAstProductions method"),a("OutboundLink")],1),t._v("\nnow returns a plain JavaScript object representing a Map/Dictionary rather than the Chevrotain's internal HashTable implementation.")])])]),t._v(" "),a("h2",{attrs:{id:"_5-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-0"}},[t._v("#")]),t._v(" 5.0.0")]),t._v(" "),a("ul",[a("li",[t._v("Setting the Parser's input "),a("strong",[t._v("before")]),t._v(" "),a("code",[t._v("this.performSelfAnalysis")]),t._v(" is called will now throw an error.\nThis limitation is necessary in order to enable to enable the automatic detection of missing "),a("code",[t._v("this.performSelfAnalysis")]),t._v(" calls.\nTo avoid this issue do "),a("strong",[t._v("not")]),t._v(" pass the input token vector input to the Parser's constructor and instead always set the input\nafter the Parser instance was created, This pattern is demonstrated in the tutorial:\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/tutorial/step2_parsing.html#structure"}},[t._v("Parser Constructor Structure.")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/tutorial/step2_parsing.html#usage"}},[t._v("Setting the Token Vector Input.")])],1)])])]),t._v(" "),a("h2",{attrs:{id:"_4-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-0-0"}},[t._v("#")]),t._v(" 4.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('The Parser constructor no longer accepts a token vector as an argument.\nThe "input" '),a("strong",[t._v("setter")]),t._v(" should be used instead, for example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Old API")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOldParser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allTokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyOldParser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* token vector */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// New API")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyNewParser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyNewParser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnewInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* token vector */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Note that the input "),a("strong",[t._v("setter")]),t._v(" has existed for a while and has been used\nin the official examples and documentation, therefore it is likely that\nonly the constructor need be modified in existing parsers.")])])]),t._v(" "),a("li",[a("p",[t._v("Automatic "),a("a",{attrs:{href:"https://chevrotain.io/docs/guide/concrete_syntax_tree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Concrete Syntax Tree"),a("OutboundLink")],1),t._v(" output is now enabled by default.\nThis means that parser which rely on "),a("strong",[t._v("embedded actions")]),t._v(" must "),a("strong",[t._v("explicitly")]),t._v(" disable\nthe CST output, for example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyNewParser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parser")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we have to explicitly disable the CST building for embedded actions to work.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allTokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" outputCst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("If a parser already uses CST output no change is needed in 4.0")])])]),t._v(" "),a("li",[a("p",[t._v("DSL repetitions no longer return any values in "),a("strong",[t._v("embedded actions")]),t._v(" mode:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("MANY")]),t._v(" / "),a("strong",[t._v("AT_LEAST_ONE")]),t._v(" no longer return an array of the iteration results.\nThe iterations results should be collected manually instead:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Before 4.0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stmts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MANY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After 4.0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stmts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MANY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  stmts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Similarly "),a("strong",[t._v("MANY_SEP")]),t._v(" / "),a("strong",[t._v("AT_LEAST_ONE_SEP")]),t._v(" also no longer return any results.\nThese used to return both the repetition result array and an array of separators Tokens consumed.\nIt is still possible to manually collect the repetition results, but not the separator tokens.")])]),t._v(" "),a("li",[a("p",[t._v("This change has no effect when using automatic "),a("strong",[t._v("CST creation")]),t._v(".")])])])])]),t._v(" "),a("h2",{attrs:{id:"_3-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-0"}},[t._v("#")]),t._v(" 3.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("A CST Node's children dictionary no longer contains empty arrays\nfor unmatched terminals and non-terminals. This means that some existence checks\nconditions in the CST visitor must be refactored, for example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyVisitor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeBaseVisitor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("atomicExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BAD - will fail due to \"TypeError: Cannot read property '0' of undefined\"")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GOOD - safe check")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if a property exists it's value is guaranteed to have at least one element.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"_2-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-0-0"}},[t._v("#")]),t._v(" 2.0.0")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("The creation of TokenTypes using the class keyword syntax has been soft deprecated.\nand is no longer officially supported.\ne.g:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No longer officially supported")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Identifier")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[a-zA-Z_]\\w+/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the createToken API instead")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Identifier "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[a-zA-Z_]\\w+/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("See the reasoning in "),a("a",{attrs:{href:"https://github.com/chevrotain/chevrotain/issues/653",target:"_blank",rel:"noopener noreferrer"}},[t._v("this issue"),a("OutboundLink")],1),t._v(".")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("defaultErrorProvider was renamed to defaultParserErrorProvider")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("All")]),t._v(" the gast namespace was flattened into the API's root, e.g:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Old API - using nested namespace.")]),t._v("\nchevrotain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Alternation\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// New API - No nested namespaces.")]),t._v("\nchevrotain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Alternation\n")])])])]),t._v(" "),a("li",[a("p",[t._v("The exceptions namespace was also flattened into the API's root.")])]),t._v(" "),a("li",[a("p",[t._v("The constructors of all the gast (Grammar AST) structure have been\nrefactored to use the config object pattern additionally some properties have been renamed or removed.\nSee the new SDK docs for details:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/rule.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rule"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/terminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terminal"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/nonterminal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("NonTerminal"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/alternation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Alternation"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/option.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Option"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/repetition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Repetition"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/repetitionwithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionWithSeparator"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/repetitionmandatory.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatory"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/repetitionmandatorywithseparator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepetitionMandatoryWithSeparator"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://chevrotain.io/documentation/2_0_0/classes/flat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flat"),a("OutboundLink")],1),t._v(" (sequence)")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);