(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{195:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("Backtracking is implemented by using "),a("a",{attrs:{href:"http://sap.github.io/chevrotain/docs/features/gates.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gates"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v('For example, given the following grammar which is not LL(K), as\nboth the alternatives in "statement" have a potentially infinitely long common prefix.')]),t._v(" "),t._m(3),a("p",[t._v("We can resolve the ambiguity by using backtracking, effectively fully trying out\nthe alternatives (in order) instead of trying to choose one using a limited token lookahead.")]),t._v(" "),t._m(4),a("p",[t._v("See "),a("a",{attrs:{href:"https://github.com/SAP/chevrotain/tree/master/examples/parser/backtracking",target:"_blank",rel:"noopener noreferrer"}},[t._v("executable example"),a("OutboundLink")],1),t._v("\nfor further details.")])])},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"backtracking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#backtracking","aria-hidden":"true"}},[this._v("#")]),this._v(" Backtracking")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Chevrotain supports backtracking to resolve ambiguities.\nBacktracking means "),n("strong",[this._v("fully")]),this._v(" trying an alternative instead of using a fixed\ntoken lookahead, this is similar to a DFS versus a BFS.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("Backtracking is not automatic and must be "),n("strong",[this._v("explicitly")]),this._v(" invoked.\nThis is because it is inefficient and is mutually exclusive with error recovery.\nIt is strongly recommended to avoid using backtracking if possible.")])},function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"language-antlr extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("statement:\n   longRule1 |\n   longRule2 |\n\nlongRule1:\n   A+ B\n\nlongRule2:\n   A+ C\n")])])])},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("RULE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"statement"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("OR")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token constant"}},[t._v("GATE")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("BACKTRACK")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("longRule1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{attrs:{class:"token constant"}},[t._v("ALT")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("longRule1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token constant"}},[t._v("GATE")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("BACKTRACK")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("longRule2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{attrs:{class:"token constant"}},[t._v("ALT")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" $"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("SUBRULE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("longRule2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="backtracking.md";n.default=e.exports}}]);