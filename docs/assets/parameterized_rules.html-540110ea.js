import{_ as o,r as a,o as c,c as u,a as s,b as n,d as t,w as l,e as i}from"./app-e26ef647.js";const r={},k=s("h1",{id:"parameterized-rules",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#parameterized-rules","aria-hidden":"true"},"#"),n(" Parameterized Rules")],-1),d=i(`<p>For example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">(</span><span class="token string">&quot;ArgumentInConst&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>Colon<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// passing the argument using the &quot;ARGS&quot; property</span>
  $<span class="token punctuation">.</span><span class="token constant">SUBRULE</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token constant">ARGS</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// isConst is a parameter passed from another rule.</span>
$<span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">(</span><span class="token string">&quot;Value&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">isConst</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  $<span class="token punctuation">.</span><span class="token constant">OR</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token comment">// the Variable alternative is only possible when &quot;isConst&quot; is Falsey</span>
    <span class="token punctuation">{</span> <span class="token function-variable function">GATE</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>isConst<span class="token punctuation">,</span> <span class="token function-variable function">ALT</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token constant">SUBRULE</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>Variable<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token function-variable function">ALT</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>IntValue<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token function-variable function">ALT</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>FloatValue<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token function-variable function">ALT</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token constant">CONSUME</span><span class="token punctuation">(</span>StringValue<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={href:"https://github.com/chevrotain/chevrotain/tree/master/examples/parser/parametrized_rules",target:"_blank",rel:"noopener noreferrer"};function v(b,h){const p=a("RouterLink"),e=a("ExternalLinkIcon");return c(),u("div",null,[k,s("p",null,[n("Chevrotain supports passing parameters to rules. This means that grammar rules may accept arguments from the calling rule. This is often used in combination with "),t(p,{to:"/features/gates.html"},{default:l(()=>[n("gates")]),_:1}),n(" to represent multiple variants of the same parsing rule while avoiding code duplication.")]),d,s("p",null,[n("See "),s("a",m,[n("executable example"),t(e)]),n(" for further details.")])])}const g=o(r,[["render",v],["__file","parameterized_rules.html.vue"]]);export{g as default};
